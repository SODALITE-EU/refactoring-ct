# Dispatcher endpoint
endpoints_benchmark: ["http://localhost:8000"]
#  TF Serving endpoint
endpoint_profiler: "http://192.168.99.108:30001"

# profile model?
profile: false
# validate model?
validate: false
# benchmark model?
benchmark: true

# other components endpoint
requests_store: "http://localhost:5002"
containers_manager: "http://localhost:5001"
controller: "http://localhost:5003"

# bench_data folder
# bench_folder: "bench_data"
# validation_data folder
validation_folder: "validation_data"

# the number of times needed to repeat the response time measure
repeat_measure: 10
# the number of requests needed to warm up the model
warm_up_times: 0
# concurrent_requests
concurrent_requests: 2

# benchmarked model (available models: half-plus-two, resnet, alexnet, googlenet, vgg16, skyline-extraction)
model: "resnet"
# benchmark strategy (available strategies: server, variable_sla, variable_load, variable_reqs)
benchmark_strategy: server

# the sampling time for the benchmark
sample_frequency: 2

server:
  # the mu and sigma value for the Normal distribution
  mu: 1
  sigma: 0.2
  # number of samples per query
  samples_per_query: 1
  # number of requests per second
  reqs_per_s: 1
  # duration of the benchmark
  duration: 600

variable_sla:
  # number of requests per second
  reqs_per_s: 1
  # duration of the benchmark
  duration: 10
  # mode
  mode: "constant"
  # increment of sla
  increment: [-0.3, 0]

variable_load:
  # number of requests per second
  reqs_per_s: 1
  # duration of the benchmark
  duration: 10
  # mode
  mode: "constant"
  # number of updates
  increment: [1, 1]

variable_reqs:
  # number of requests per second
  reqs_per_s: 1
  # duration of the benchmark
  duration: 60
  # mode
  mode: "constant"
  # increment of reqs/s
  increment: [1, 0]

