apiVersion: apps/v1
kind: Deployment
metadata:
  name: tfcontrolled-deploy
  labels:
    run: tfcontrolled
spec:
  replicas: 1
  selector:
    matchLabels:
      run: tfcontrolled
  template:
    metadata:
      labels:
        run: tfcontrolled
    spec:
      containers:
      - name: tfcontrolled-actuator
        image: tfcontrolled-actuator:local
        volumeMounts:
        - mountPath: /var/run
          name: docker-sock
        ports:
        - containerPort: 5000
      - name: tfserving-cpu-0
        image: tensorflow/serving:latest-gpu
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: "none"
        args: [ "--model_config_file=/home/models/models.config", "--rest_api_port=8501"]
        ports:
        - containerPort: 8501
        volumeMounts:
        - name: shared-models
          mountPath: /home/models
      - name: tfserving-cpu-1
        image: tensorflow/serving:latest-gpu
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: "none"
        args: [ "--model_config_file=/home/models/models.config", "--rest_api_port=8502"]
        ports:
        - containerPort: 8502
        volumeMounts:
        - name: shared-models
          mountPath: /home/models
      - name: tfserving-cpu-2
        image: tensorflow/serving:latest-gpu
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: "none"
        args: [ "--model_config_file=/home/models/models.config", "--rest_api_port=8503"]
        ports:
        - containerPort: 8503
        volumeMounts:
        - name: shared-models
          mountPath: /home/models
      - name: tfserving-gpu-0
        image: tensorflow/serving:latest-gpu
        # gpus can also be requested with
        # resources:
          # limits:
            # nvidia.com/gpu: 2 # requesting 2 GPUs
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: "0"
        args: [ "--model_config_file=/home/models/models.config", "--rest_api_port=8504"]
        ports:
        - containerPort: 8504
        volumeMounts:
        - name: shared-models
          mountPath: /home/models
      volumes:
      - name: shared-models
        hostPath:
          path: /hosthome/nik/models
      - name: docker-sock
        hostPath:
          path: /var/run